#include<iostream>
#include<cmath>
using namespace std;

int main() {
    int n;
    cin >> n;
    int a[n];

    // Initialize the array for the sieve
    for (int i = 0; i < n; i++) {
        a[i] = 1;   // Assume all numbers are prime initially
    }
    a[0] = 0;  // 0 is not prime
    a[1] = 0;  // 1 is not prime

    // Implement the Sieve of Eratosthenes
    for (int i = 2; i <= sqrt(n); i++) {
        if (a[i] == 1) {  // If i is prime
            for (int j = i * i; j < n; j += i) {
                a[j] = 0;  // Mark multiples of i as non-prime
            }
        }
    }

    int c = 0;  // Prime counter
    long long int sum = 0;  // Sum of primes

    // Collect prime numbers and calculate their count and sum
    for (int i = 2; i < n; i++) {
        if (a[i] == 1) {  // If i is prime
            cout << i << " ";  // Print the prime number
            c++;  // Increment the prime count
            sum += i;  // Add to the sum of primes
        }
    }

    // Output the total count and sum of prime numbers
    cout << "\nThere are " << c << " prime numbers below " << n << endl;
    cout << "The sum of prime numbers below " << n << " is " << sum << endl;

    return 0;
}
